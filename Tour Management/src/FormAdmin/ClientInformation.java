/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FormAdmin;

import Connect.JDBCConnection;
import static FormClient.Information.IdClient;
import Objects.Client;
import Service.AddressService;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ranco
 */
public class ClientInformation extends javax.swing.JPanel {

    private Connection connect = JDBCConnection.getConnection();
    private AddressService addressService = new AddressService();

    public static int IdClient;
    public static String nameClient;
    
    DefaultTableModel tableModel;

    /**
     * Creates new form ClientInformation
     */
    public ClientInformation() {
        initComponents();
        ShowClientInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        nameClientVar = new javax.swing.JTextField();
        searchAcBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(808, 600));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Phone", "Username", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 255));
        jLabel12.setText("Client");

        nameClientVar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        nameClientVar.setForeground(new java.awt.Color(153, 153, 255));
        nameClientVar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameClientVarActionPerformed(evt);
            }
        });

        searchAcBtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        searchAcBtn.setForeground(new java.awt.Color(153, 153, 255));
        searchAcBtn.setText("Search");
        searchAcBtn.setBorder(new javax.swing.border.MatteBorder(null));
        searchAcBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchAcBtnMouseClicked(evt);
            }
        });
        searchAcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAcBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel12)
                        .addGap(29, 29, 29)
                        .addComponent(nameClientVar, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(searchAcBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameClientVar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(searchAcBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameClientVarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameClientVarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameClientVarActionPerformed

    private void searchAcBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchAcBtnMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
//            String tenSP = JOptionPane.showInputDialog(this, "Nhập tên sản phẩm cần tìm");
            if (nameClientVar.getText().equals("") == false) {
            Connection conn = JDBCConnection.getConnection();
            String sql = "select * from Client where FullName like ?";
            PreparedStatement pre = conn.prepareStatement(sql);
            pre.setString(1, "%" + nameClientVar.getText() + "%");
            ResultSet resultSet = pre.executeQuery();
            model.setRowCount(0);
                while (resultSet.next()) {
                    Vector vector = new Vector();
                    vector.add(resultSet.getString("FullName"));
                    vector.add(addressService.getAddressByUsername(String.valueOf(resultSet.getString("Username"))));
                    vector.add(resultSet.getString("Phone"));
                    vector.add(resultSet.getString("Username"));
                    vector.add(resultSet.getString("Email"));

                    model.addRow(vector);
                }
            } else {
                ShowClientInfo();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Không tìm thấy!");
        }
    }//GEN-LAST:event_searchAcBtnMouseClicked

    private void searchAcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAcBtnActionPerformed
        
    }//GEN-LAST:event_searchAcBtnActionPerformed
    public void ShowClientInfo() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try {
            
            String sql = "select * from Client ";
            Statement statement = connect.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("FullName"));
                vector.add(addressService.getAddressByUsername(String.valueOf(resultSet.getString("Username"))));
                vector.add(resultSet.getString("Phone"));
                vector.add(resultSet.getString("Username"));
                vector.add(resultSet.getString("Email"));

//                label_name.setText(resultSet.getString("FullName"));
//                label_address.setText(addressService.getAddressByUsername(String.valueOf(resultSet.getString("Username"))));
//                label_phone.setText(resultSet.getString("Phone"));
//                label_username.setText(resultSet.getString("Username"));
//                label_gmail.setText(resultSet.getString("Email"));
                model.addRow(vector);
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameClientVar;
    private javax.swing.JButton searchAcBtn;
    // End of variables declaration//GEN-END:variables
}
