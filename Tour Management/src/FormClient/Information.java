/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package FormClient;

import Connect.JDBCConnection;
import Form.MainMenuClient;
import Service.AddressService;
import Service.ClientService;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ranco
 */
public class Information extends javax.swing.JPanel {

    private Connection connect = JDBCConnection.getConnection();
    private AddressService addressService = new AddressService();
 
    public static int IdClient;
    public static String nameClient;
    
    
    /**
     * Creates new form ClientAllTrips
     */
    public Information() {
        initComponents();
        ShowClientInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ClientInforTable = new javax.swing.JTable();
        nameTextInput = new javax.swing.JTextField();
        addressTextInput = new javax.swing.JTextField();
        phoneTextInput = new javax.swing.JTextField();
        userNameTextInput = new javax.swing.JTextField();
        gmailTextInput = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        deleteBtn1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        ClientInforTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Phone", "Username", "Phone"
            }
        ));
        ClientInforTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClientInforTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ClientInforTable);

        nameTextInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextInputActionPerformed(evt);
            }
        });

        phoneTextInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextInputActionPerformed(evt);
            }
        });

        gmailTextInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gmailTextInputActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 255));
        jLabel10.setText("Name:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 255));
        jLabel11.setText("Phone:");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 255));
        jLabel12.setText("Address:");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 153, 255));
        jLabel13.setText("Username:");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 153, 255));
        jLabel14.setText("Gmail:");

        deleteBtn1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        deleteBtn1.setForeground(new java.awt.Color(153, 153, 255));
        deleteBtn1.setText("Update");
        deleteBtn1.setBorder(new javax.swing.border.MatteBorder(null));
        deleteBtn1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtn1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(deleteBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(gmailTextInput, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(userNameTextInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(nameTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(addressTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(phoneTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userNameTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gmailTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(deleteBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextInputActionPerformed

    private void ClientInforTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClientInforTableMouseClicked
        // TODO add your handling code here:
        int myIndex = ClientInforTable.getSelectedRow();
        nameTextInput.setText(ClientInforTable.getValueAt(myIndex, 0).toString());
        addressTextInput.setText(ClientInforTable.getValueAt(myIndex, 1).toString());
        phoneTextInput.setText(ClientInforTable.getValueAt(myIndex, 2).toString());
        userNameTextInput.setText(ClientInforTable.getValueAt(myIndex, 3).toString());
        gmailTextInput.setText(ClientInforTable.getValueAt(myIndex, 4).toString());
    }//GEN-LAST:event_ClientInforTableMouseClicked

 
    private void phoneTextInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextInputActionPerformed

    private void gmailTextInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gmailTextInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gmailTextInputActionPerformed

    private void deleteBtn1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtn1MouseClicked
       // TODO add your handling code here:
        String name  = nameTextInput.getText();
        String phone = phoneTextInput.getText();
        String address = addressTextInput.getText();
        String userName = userNameTextInput.getText();
        String gmail = gmailTextInput.getText();
        ClientService clientService = new ClientService();
        AddressService addressService = new AddressService();
        
        if(clientService.updateClientInformation(String.valueOf(IdClient), name, phone, gmail) && addressService.updateAddress(address, userName)){
            JOptionPane.showMessageDialog(null, "Update Success");
            DefaultTableModel model = (DefaultTableModel)ClientInforTable.getModel();
            model.setRowCount(0);
            ShowClientInfo();
        }
        else{
            JOptionPane.showMessageDialog(null, "Update Failure");
            DefaultTableModel model = (DefaultTableModel)ClientInforTable.getModel();
            model.setRowCount(0);
            ShowClientInfo();
        }
    }//GEN-LAST:event_deleteBtn1MouseClicked
    public void ShowClientInfo() {
        DefaultTableModel model = (DefaultTableModel) ClientInforTable.getModel();
        try {
            String sql = "select * from Client where IdClient = N'" + IdClient + "'";
            Statement statement = connect.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);
            while (resultSet.next()) {
                Vector vector = new Vector();
                vector.add(resultSet.getString("FullName"));
                vector.add(addressService.getAddressByUsername(String.valueOf(resultSet.getString("Username"))));
                vector.add(resultSet.getString("Phone"));
                vector.add(resultSet.getString("Username"));
                vector.add(resultSet.getString("Email"));

//                label_name.setText(resultSet.getString("FullName"));
//                label_address.setText(addressService.getAddressByUsername(String.valueOf(resultSet.getString("Username"))));
//                label_phone.setText(resultSet.getString("Phone"));
//                label_username.setText(resultSet.getString("Username"));
//                label_gmail.setText(resultSet.getString("Email"));
                model.addRow(vector);
            }
        } catch (Exception e) {
            e.getMessage();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ClientInforTable;
    private javax.swing.JTextField addressTextInput;
    private javax.swing.JButton deleteBtn1;
    private javax.swing.JTextField gmailTextInput;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextInput;
    private javax.swing.JTextField phoneTextInput;
    private javax.swing.JTextField userNameTextInput;
    // End of variables declaration//GEN-END:variables
}
